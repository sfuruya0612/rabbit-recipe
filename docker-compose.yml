version: "3.7"

networks:
  app_default:
    driver: "bridge"

volumes:
  storage:
    driver: "local"

services:
  front:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    command: sh -c "yarn start"
    links:
      - proxy
    networks:
      - app_default
    ports:
      - "3000:3000"
    stdin_open: true

  proxy:
    build:
      context: ./proxy
      dockerfile: Dockerfile
    command: sh -c "/usr/local/bin/envoy -c /usr/local/etc/envoy.yaml -l debug"
    links:
      - api
    networks:
      - app_default
    ports:
      - "8080:8080"

  api:
    build:
      args:
        - APP_NAME=${APP_NAME}
        - ENV=${ENV}
      context: ./backend
      dockerfile: Dockerfile
      target: build
      # target: app
    # command: sh -c "/app/bin/rabbit_recipe migrate && /app/bin/rabbit_recipe start"
    # command: sh -c "/app/_build/dev/rel/rabbit_recipe/bin/rabbit_recipe migrate && /app/_build/dev/rel/rabbit_recipe/bin/rabbit_recipe foreground"
    command: sh -c "mix ecto.reset && /app/_build/dev/rel/rabbit_recipe/bin/rabbit_recipe foreground"
    depends_on:
      - mysql
    networks:
      - app_default
    ports:
      - "4000:4000"
    volumes:
      - ~/.aws:/root:ro
    stdin_open: true

  mysql:
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=${APP_NAME}_${ENV}
    image: mysql:5.6.47
    networks:
      - app_default
    ports:
      - "3306:3306"
    volumes:
      - storage:/var/lib/mysql
